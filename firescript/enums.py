from enum import Enum, auto


class NodeTypes(Enum):
    ROOT = "Root"
    DIRECTIVE = "Directive"
    IF_STATEMENT = "IfStatement"
    ELIF_STATEMENT = "ElifStatement"
    ELSE_STATEMENT = "ElseStatement"
    WHILE_STATEMENT = "WhileStatement"
    BREAK_STATEMENT = "BreakStatement"
    CONTINUE_STATEMENT = "ContinueStatement"
    VARIABLE_DECLARATION = "VariableDeclaration"
    VARIABLE_ASSIGNMENT = "VariableAssignment"
    BINARY_EXPRESSION = "BinaryExpression"
    EQUALITY_EXPRESSION = "EqualityExpression"
    RELATIONAL_EXPRESSION = "RelationalExpression"
    LITERAL = "Literal"
    IDENTIFIER = "Identifier"
    FUNCTION_CALL = "FunctionCall"
    SCOPE = "Scope"
    ARRAY_LITERAL = "ArrayLiteral"
    ARRAY_ACCESS = "ArrayAccess"
    METHOD_CALL = "MethodCall"
    COMPOUND_ASSIGNMENT = "CompoundAssignment"
    UNARY_EXPRESSION = "UnaryExpression"
    FUNCTION_DEFINITION = "FunctionDefinition"
    PARAMETER = "Parameter"
    RETURN_STATEMENT = "ReturnStatement"
    CLASS_DEFINITION = "ClassDefinition"
    CLASS_FIELD = "ClassField"
    FIELD_ACCESS = "FieldAccess"
    ASSIGNMENT = "Assignment"
    CLASS_METHOD_DEFINITION = "ClassMethodDefinition"
    TYPE_METHOD_CALL = "TypeMethodCall"
    CONSTRUCTOR_CALL = "ConstructorCall"


class CompilerDirective(Enum):
    ENABLE_SYSCALLS = "enable_syscalls"
    ENABLE_DROPS = "enable_drops"
