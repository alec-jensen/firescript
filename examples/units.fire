// Objects can have units associated with them. Units are used to convert values between different units.
// The units system is pretty flexible and allows for lots of cool stuff

// Define a class with units
class Temperature {
    Temperature(this, float value) {
        this.value = value;
    }

    Units {
        // Any object with units must have a base unit, defined like this
        Celsius: BaseUnit;

        // Other units must provide 2 functions: toBaseUnit and fromBaseUnit
        // These functions must return a new object of the same type
        Fahrenheit: {
            Temperature toBaseUnit(this) {
                return new Temperature(this.value - 32.0 * 5.0 / 9.0);
            }

            Temperature fromBaseUnit(this) {
                return new Temperature(this.value * 9.0 / 5.0 + 32.0);
            }
        }

        Kelvin: {
            Temperature toBaseUnit(this) {
                return new Temperature(this.value - 273.15);
            }

            Temperature fromBaseUnit(this) {
                return new Temperature(this.value + 273.15);
            }
        }

        // By defining conversions to and from the base unit, we can convert between any units
    }
}

// Create a temperature object

// Units are defined through meta attributes. This means they can either apply to the variable or the object

// This variable will always be in Celsius, and will raise an error if you try to assign anything to it that isn't in Celsius
Temperature temp1[unit=Temperature.Units.Celsius] = new Temperature(0.0);

// However, since this is defined on the object, a Temperature object can be assigned with any unit
Temperature temp2 = new Temperature[unit=Temperature.Units.Fahrenheit](32.0);

// You can convert between units by using the `as` keyword
Temperature temp3 = temp2 as Temperature[unit=Temperature.Units.Celsius];

// This unit system allows for safer and more flexible code, and can be used to prevent errors in unit conversion
// For example, if you try to assign a Fahrenheit temperature to a Celsius variable, you will get a compile-time error
Temperature[temp=Temperature.Units.Celsius] temp4 = new Temperature[unit=Temperature.Units.Fahrenheit](32.0); // UnitError: Cannot assign a Fahrenheit object to a Celsius variable